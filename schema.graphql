type Group {
	name: String!
	users: [User!]!
}

enum Severity {
	LOW
	MEDIUM
	HIGH
}

type Todo {
	id: ID!
	name: String!
	checked: Boolean!
	created: AWSDateTime!
	user: User!
	severity: Severity!
}

type User {
	id: ID!
	name: String!
	todos: [Todo!]!
}

type TodoEvent {
	userId: ID!
	groupId: ID!
	todoId: ID!
	severity: Severity!
	todo: Todo
}

type Subscription {
	newTodo(name: String): Todo
	@aws_subscribe(mutations: ["addTodo"])
	todo(userId: ID, groupId: ID, minSeverity: Severity): TodoEvent
	@aws_subscribe(mutations: ["notifyTodo"])
}

type Mutation {
	addTodo(userId: ID!, name: String!, severity: Severity!): Todo!
	removeTodo(id: ID!): ID!
	notifyTodo(userId: ID!, groupId: ID!, severity: Severity!, id: ID!): TodoEvent!
}

type Query {
	allGroups: [Group!]!
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
